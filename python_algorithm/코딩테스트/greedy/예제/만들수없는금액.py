# 0728

# 첫째 줄에는 동전의 개수를 나타내는 양의 정수 n 이 주어집니다. 1 < =  n <= 1000
# 둘째 줄에는 각 동전의 화폐 단위를 나타내는 N개의 자연수가 주어지며, 각 자연수는 공백으로 구분합니다. 이때, 각 화폐 단위는 1000000 이하의 자연수입니다.

# 첫째 줄에 주어진 동전들로 만들 수 없는 양의 정수 금액 중 최솟값을 출력합니다.


# 문제 해설 정렬을 이용한 그리디 알고리즘으로 해결할 ㅅ ㅜ있는 문제이다. 문제 해결을 위한 정확한 아이디어를 떠올리기 위해서는 충분히
# 고민을 해야 하는 문제이므로 , 그리디 알고리즘에 익숙하지 않은 독자라면 문제 해결이 쉽지 않을 수 있다.

# 오름차순 정렬 후 1부터 차례대로 특정한 금액을 만들 수 있는지 확인하면 된다. 1부터 target 01 까지의 모든 금액을 만들 수 있다고 가정해보자.
# 화폐 단위가 작은 순서대로 동전을 확인하며, 현재 확인하는 동전을 이용해 target 금액 또한 만들 수 있ㄴ는지 확인 하면 된다.
# 만약 target 금액ㅇ르 만들 수 있다면, target ㄱ밧ㅇ르 업데이트하는 방식을 이용한다.

# step

# 처음에는 금액 1ㅇ르 만들 수 있는지 확인하기 위해, target = 1 설정
# target =1 만족할 수 있는지 확ㅇ니. 화폐 단위가 1인 동전이 있다. 우리는 이 동전을 이용해서 금액 1을 만들 수 있다.
# 이어서 taret  =1 +1 로 업데이트를 한다.
# target = 2 를 만족할 수 있는지 확인한다. 우리에게는 화폐 단위가 2인 동전이 있다. 따라서 target = 2+2 가 된다.
# target = 4만족할 수 있는지 확인 , 우리에게는 화폐 다누이가 3인 동전이 있다. 
# 쭉 계속 

n = int(input())
data = list(map(int,input().split()))
data.sort()

target = 1
for x in data:
    if target < x:
        break
    target += x

print(target)

