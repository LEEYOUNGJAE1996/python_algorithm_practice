# 230718

정렬이란 데이터를 특정한 기준에 따라서 순서대로 나열하는 것을 말한다.
프로글매에서 데이터를 가공할 때 오름차순이나 내림차순 등 대부분 어떤 식으로든 정렬해서 사용하는 경우가 많기에 정렬 알고리즘은 프로그램을 작성할 때 가장 많이 사용되는 알고리즘 중 하나다. 
정렬 알고리즘으로 데이터를 정렬하면 다음 장에서 배울 이진 탐색이 가능해진다. 정렬 알고리즘은 이진 탐색의 전처리 과정이기도 제대로 알아야한다.

선택 정렬, 퀵정렬, 삽입 정렬, 계수 정렬

기본 정렬 라이브러리를 정요하여 좀 더 효과적인 정렬 수행 방법도 다룬다.

선택 정렬
- 가장 작은 데이터를 선택해 맨 앞에 있는 데이터와 바꾸고, 그 다음 작은 데이터를 선택해 앞에서 두 번째 데이터와 바꾸는 과정을 반복하는 것

삽입 정렬(문제 풀이에 사용하기에는 느린 편)
- 데이터를 하나씩 확인마ㅕ, 각 데이터를 적절한 위치에 삽입하는 것

삽입 정렬은 선택 정렬처럼 동작 원리를 직관적으로 이해하기 쉬운 알고리즘이다. 물론 삽입 정렬은 선택 정렬에 비해 구현 난이도가 높은 편이지만 선택 정렬에 비해 실행 시간 측면에서
더 효율적인 알고리즘으로 알려져 있다. 특히 삽입 정렬은 필요할 때만 위치를 바꾸므로 '데이터가거의 정렬 되어 있을 때' 훨씬 효율적이다.


퀵정렬

퀵 정렬은 지금까지 배운 정렬 알고리즘 중에 가장 많이 사용되는 알고리즘이다. 이와 비교되어 빠른 알고리즘은 병합 정렬이다.
퀵과 병합 정렬은 프로그래밍 언어에서 정렬 라이브러리 근간이 되는 알고리즘이다.
왜 근간? 빠르다!   --- why? - 기준 데이터를 설정하고 그 기준보다 큰 데이터와 작은 데이터의 위치를 바꾼다.

퀵정렬은 기준을 설정한 다음 큰 수와 작은 수를 교환한 후 리스트를 반으로 나누는 방식으로 동작한다. 이해하기까지 시간이 걸리겠지만 원리를 이해하면 병합 정렬, 힙 정렬 등 다른 고급 정렬 기법에 비해 소스코드를 쉽게 작성이 가능하다.
퀵정렬에서는 피벗이 사용된다. 큰 숫자와 작은 숫자를 교환할 때, 교환하기 위한 '기준'을 바로 피벗이라고 힌다.


계수 정렬(Count Sort)
특정한 조건이 부합할 때만 사용할 수 있지만 매우 빠른 정렬 알고리즘이다.
데이터의 개수가 N 데이터 중 최댓값이 K 일 때, 계수 정렬은 최악의 경우에도 수행 시간 O(N+K)를 보장한다.
다만, 계수 정렬은 '데이터의 크기 범위가 제한 되어 정수 형태로 표현할 수 있을 때만 사용할 수 있다. 예를 들어 데이터의 값이 무한한 범위를 가질 수 있는 실수형 데이터가 주어지는 경우 계수 정렬은 사용하기 어렵다.
일반적으로 가장 큰 데이터와 가장 작은 데이터의 차이가 1000000을 넘지 않을 때 효과적으로 사용할 수 있다.
예를 들어 0이상 100 이하인 성적 데이터를 정렬할 때 계수 정렬이 효과적이다. 다만, 가장 큰 데이터와 가장 작은 데이터의 차이가 너무 크다면 계수 정렬은 사용할 수 없다. 
계수 정렬은 이용할 때는 '모든 범위를 담을 수 있는 크기의 리스트를 선언'해야 하기 때문이다. 예를 들어 가장 큰 데이터와 가장 작은 데이터의 차이가 1000000 이라면 총 1000001 개의 데이터가 들어갈 수 있는 리스트를 초기화해야 한다.
